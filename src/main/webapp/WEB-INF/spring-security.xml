<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
 
<security:http auto-config="true" use-expressions="true" access-denied-page="/denied.html" >
  
  <security:intercept-url pattern="/login.html" access="permitAll"/>
  <security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
  <security:intercept-url pattern="/common.html" access="hasRole('ROLE_USER')"/>
   <security:intercept-url pattern="/main.html" access="hasRole('ROLE_USER')"/>
   
  <security:form-login
    login-page="/login.html"
    authentication-failure-url="/denied.html"
    default-target-url="/welcome.html"/>
    
  <security:logout
    invalidate-session="true"
    logout-success-url="/login.html"
    logout-url="/logout.html"/>
  
 </security:http>
  
 <!-- Declare an authentication-manager to use a custom userDetailsService -->
 <security:authentication-manager>
         <security:authentication-provider user-service-ref="customUserDetailsService">
          
         </security:authentication-provider>
 </security:authentication-manager>
  
 
 
 <!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
 <beans:bean id="customUserDetailsService" class="tcgt.helpers.CustomUserDetailsService"/>
  

</beans:beans>